// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using ROH.Context.Character;

#nullable disable

namespace ROH.Context.Character.Migrations
{
    [DbContext(typeof(CharacterContext))]
    partial class CharacterContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.10")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("ROH.Context.Character.Entities.AttackStatus", b =>
                {
                    b.Property<long>("IdCharacter")
                        .HasColumnType("bigint");

                    b.Property<long>("LongRangedWeaponLevel")
                        .HasColumnType("bigint");

                    b.Property<long>("MagicWeaponLevel")
                        .HasColumnType("bigint");

                    b.Property<long>("OneHandedWeaponLevel")
                        .HasColumnType("bigint");

                    b.Property<long>("TwoHandedWeaponLevel")
                        .HasColumnType("bigint");

                    b.HasKey("IdCharacter");

                    b.ToTable("AttackStatuses");
                });

            modelBuilder.Entity("ROH.Context.Character.Entities.Character", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("Id"));

                    b.Property<DateTime>("DateCreated")
                        .HasColumnType("timestamp with time zone");

                    b.Property<Guid>("Guid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid")
                        .HasDefaultValueSql("gen_random_uuid()");

                    b.Property<long>("IdAccount")
                        .HasColumnType("bigint");

                    b.Property<long?>("IdGuild")
                        .HasColumnType("bigint");

                    b.Property<long>("IdKingdom")
                        .HasColumnType("bigint");

                    b.Property<string>("Name")
                        .HasColumnType("text");

                    b.Property<int>("Race")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.ToTable("Characters");
                });

            modelBuilder.Entity("ROH.Context.Character.Entities.CharacterInventory", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("Id"));

                    b.Property<long>("IdCharacter")
                        .HasColumnType("bigint");

                    b.Property<long>("IdItem")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.HasIndex("IdCharacter");

                    b.ToTable("CharacterInventory");
                });

            modelBuilder.Entity("ROH.Context.Character.Entities.CharacterSkill", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("Id"));

                    b.Property<long>("IdCharacter")
                        .HasColumnType("bigint");

                    b.Property<long>("IdSkill")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.HasIndex("IdCharacter");

                    b.HasIndex("IdSkill");

                    b.ToTable("CharacterSkills");
                });

            modelBuilder.Entity("ROH.Context.Character.Entities.DefenseStatus", b =>
                {
                    b.Property<long>("IdCharacter")
                        .HasColumnType("bigint");

                    b.Property<long>("ArcaneDefenseLevel")
                        .HasColumnType("bigint");

                    b.Property<long>("DarknessDefenseLevel")
                        .HasColumnType("bigint");

                    b.Property<long>("EarthDefenseLevel")
                        .HasColumnType("bigint");

                    b.Property<long>("FireDefenseLevel")
                        .HasColumnType("bigint");

                    b.Property<long>("LightDefenseLevel")
                        .HasColumnType("bigint");

                    b.Property<long>("LightningDefenseLevel")
                        .HasColumnType("bigint");

                    b.Property<long>("MagicDefenseLevel")
                        .HasColumnType("bigint");

                    b.Property<long>("PhysicDefenseLevel")
                        .HasColumnType("bigint");

                    b.Property<long>("WaterDefenseLevel")
                        .HasColumnType("bigint");

                    b.Property<long>("WindDefenseLevel")
                        .HasColumnType("bigint");

                    b.HasKey("IdCharacter");

                    b.ToTable("DefenseStatuses");
                });

            modelBuilder.Entity("ROH.Context.Character.Entities.EquippedItems", b =>
                {
                    b.Property<long>("IdCharacter")
                        .HasColumnType("bigint");

                    b.Property<long?>("IdArmor")
                        .HasColumnType("bigint");

                    b.Property<long?>("IdBoots")
                        .HasColumnType("bigint");

                    b.Property<long?>("IdGloves")
                        .HasColumnType("bigint");

                    b.Property<long?>("IdHead")
                        .HasColumnType("bigint");

                    b.Property<long?>("IdLeftBracelet")
                        .HasColumnType("bigint");

                    b.Property<long?>("IdLegs")
                        .HasColumnType("bigint");

                    b.Property<long?>("IdNecklace")
                        .HasColumnType("bigint");

                    b.Property<long?>("IdRightBracelet")
                        .HasColumnType("bigint");

                    b.HasKey("IdCharacter");

                    b.ToTable("EquippedItems");
                });

            modelBuilder.Entity("ROH.Context.Character.Entities.HandRing", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("Id"));

                    b.Property<long>("IdEquippedItems")
                        .HasColumnType("bigint");

                    b.Property<long>("IdItem")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.HasIndex("IdEquippedItems");

                    b.ToTable("RingsEquipped");
                });

            modelBuilder.Entity("ROH.Context.Character.Entities.Skill", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("Id"));

                    b.Property<string>("Animation")
                        .HasColumnType("text");

                    b.Property<long?>("Damage")
                        .HasColumnType("bigint");

                    b.Property<long?>("Defense")
                        .HasColumnType("bigint");

                    b.Property<long>("ManaCost")
                        .HasColumnType("bigint");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("Type")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.ToTable("Skills");
                });

            modelBuilder.Entity("ROH.Context.Character.Entities.Status", b =>
                {
                    b.Property<long>("IdCharacter")
                        .HasColumnType("bigint");

                    b.Property<long>("CurrentCarryWeight")
                        .HasColumnType("bigint");

                    b.Property<long>("CurrentHealth")
                        .HasColumnType("bigint");

                    b.Property<long>("CurrentMana")
                        .HasColumnType("bigint");

                    b.Property<long>("CurrentStamina")
                        .HasColumnType("bigint");

                    b.Property<long>("FullCarryWeight")
                        .HasColumnType("bigint");

                    b.Property<long>("FullHealth")
                        .HasColumnType("bigint");

                    b.Property<long>("FullMana")
                        .HasColumnType("bigint");

                    b.Property<long>("FullStamina")
                        .HasColumnType("bigint");

                    b.Property<long>("Level")
                        .HasColumnType("bigint");

                    b.Property<long>("MagicLevel")
                        .HasColumnType("bigint");

                    b.HasKey("IdCharacter");

                    b.ToTable("Statuses");
                });

            modelBuilder.Entity("ROH.Context.Character.Entities.AttackStatus", b =>
                {
                    b.HasOne("ROH.Context.Character.Entities.Character", "Character")
                        .WithOne("AttackStatus")
                        .HasForeignKey("ROH.Context.Character.Entities.AttackStatus", "IdCharacter")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Character");
                });

            modelBuilder.Entity("ROH.Context.Character.Entities.CharacterInventory", b =>
                {
                    b.HasOne("ROH.Context.Character.Entities.Character", "Character")
                        .WithMany("Inventory")
                        .HasForeignKey("IdCharacter")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Character");
                });

            modelBuilder.Entity("ROH.Context.Character.Entities.CharacterSkill", b =>
                {
                    b.HasOne("ROH.Context.Character.Entities.Character", "Character")
                        .WithMany("Skills")
                        .HasForeignKey("IdCharacter")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ROH.Context.Character.Entities.Skill", "Skill")
                        .WithMany()
                        .HasForeignKey("IdSkill")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Character");

                    b.Navigation("Skill");
                });

            modelBuilder.Entity("ROH.Context.Character.Entities.DefenseStatus", b =>
                {
                    b.HasOne("ROH.Context.Character.Entities.Character", "Character")
                        .WithOne("DefenseStatus")
                        .HasForeignKey("ROH.Context.Character.Entities.DefenseStatus", "IdCharacter")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Character");
                });

            modelBuilder.Entity("ROH.Context.Character.Entities.EquippedItems", b =>
                {
                    b.HasOne("ROH.Context.Character.Entities.Character", "Character")
                        .WithOne("EquippedItems")
                        .HasForeignKey("ROH.Context.Character.Entities.EquippedItems", "IdCharacter")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Character");
                });

            modelBuilder.Entity("ROH.Context.Character.Entities.HandRing", b =>
                {
                    b.HasOne("ROH.Context.Character.Entities.EquippedItems", "EquippedItems")
                        .WithMany("RightHandRings")
                        .HasForeignKey("IdEquippedItems")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("EquippedItems");
                });

            modelBuilder.Entity("ROH.Context.Character.Entities.Status", b =>
                {
                    b.HasOne("ROH.Context.Character.Entities.Character", "Character")
                        .WithOne("Status")
                        .HasForeignKey("ROH.Context.Character.Entities.Status", "IdCharacter")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Character");
                });

            modelBuilder.Entity("ROH.Context.Character.Entities.Character", b =>
                {
                    b.Navigation("AttackStatus");

                    b.Navigation("DefenseStatus");

                    b.Navigation("EquippedItems");

                    b.Navigation("Inventory");

                    b.Navigation("Skills");

                    b.Navigation("Status");
                });

            modelBuilder.Entity("ROH.Context.Character.Entities.EquippedItems", b =>
                {
                    b.Navigation("RightHandRings");
                });
#pragma warning restore 612, 618
        }
    }
}
